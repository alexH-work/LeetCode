/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry=0,sum =0;
        ListNode *ans = new ListNode;
        ListNode *temp = ans;
        while(l1 != 0 || l2 != 0)
        {
            if(l1 != 0 && l2 != 0){
                if((carry + l1->val + l2->val)>9){
                    sum = carry + l1->val + l2->val-10;
                    carry = 1;
                }else{
                    sum = carry + l1->val + l2->val;
                    carry = 0;
                }
                l1 = l1->next;
                l2 = l2->next;
            }else if(l1 == 0 && l2 != 0){
                if((carry + l2->val)>9){
                    sum = carry + l2->val - 10;
                    carry = 1;
                }else{
                    sum = carry + l2->val;
                    carry = 0;
                }
                l2 = l2->next;
            }else{
                if((carry + l1->val)>9){
                    sum = carry + l1->val - 10;
                    carry = 1;
                }else{
                    sum = carry + l1->val;
                    carry = 0;
                }
                l1 = l1->next;
            }
            
            
            temp->val = sum;
            if(l1 != 0 || l2 != 0){
                temp->next = new ListNode;
            }else if(l1 == 0 && l2 == 0 && carry >0){
                temp->next = new ListNode(carry);
            }
            temp = temp->next;
        }
        return ans;
    }
};
